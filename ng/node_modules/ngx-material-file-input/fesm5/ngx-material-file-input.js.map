{"version":3,"file":"ngx-material-file-input.js","sources":["ng:/ngx-material-file-input/lib/model/file-input-config.model.ts","ng:/ngx-material-file-input/lib/model/file-input.model.ts","ng:/ngx-material-file-input/lib/file-input/file-input-mixin.ts","ng:/ngx-material-file-input/lib/file-input/file-input.component.ts","ng:/ngx-material-file-input/lib/pipe/byte-format.pipe.ts","ng:/ngx-material-file-input/lib/material-file-input.module.ts","ng:/ngx-material-file-input/lib/validator/file-validator.ts","ng:/ngx-material-file-input/ngx-material-file-input.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[] | null, private delimiter: string = ', ') {\n    this._fileNames = (this._files || []).map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\n\n// Boilerplate for applying mixins to FileInput\n/** @docs-private */\nexport class FileInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n      public _parentForm: NgForm,\n      public _parentFormGroup: FormGroupDirective,\n      public ngControl: NgControl) { }\n}\n\n/**\n * Allows to use a custom ErrorStateMatcher with the file-input component\n */\nexport const FileInputMixinBase:\n  CanUpdateErrorStateCtor &\n  typeof FileInputBase =\n  mixinErrorState(FileInputBase);\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self, DoCheck } from '@angular/core';\nimport { ControlValueAccessor, NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { FileInput } from '../model/file-input.model';\nimport { FileInputMixinBase } from './file-input-mixin';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent extends FileInputMixinBase implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy, DoCheck {\n  static nextId = 0;\n\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n  @Input() accept: string | null = null;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Whether the current input has files\n   */\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled(): boolean {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl)\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  writeValue(obj: FileInput | null): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Remove all files from the file input component\n   * @param [event] optional event that may have triggered the clear action\n   */\n  clear(event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.value = new FileInput([]);\n    this._elementRef.nativeElement.querySelector('input').value = null;\n    this._onChange(this.value);\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: Event) {\n    const fileList: FileList | null = (<HTMLInputElement>event.target).files;\n    const fileArray: File[] = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport { FileInputConfig, NGX_MAT_FILE_INPUT_CONFIG } from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n  /**\n   * Function to control content of files\n   *\n   * @param bytes max number of bytes allowed\n   *\n   * @returns\n   */\n  export function maxContentSize(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n      const condition = bytes >= size;\n      return condition\n        ? null\n        : {\n            maxContentSize: {\n              actualSize: size,\n              maxSize: bytes\n            }\n          };\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileInputBase as ɵa,FileInputMixinBase as ɵb} from './lib/file-input/file-input-mixin';"]}