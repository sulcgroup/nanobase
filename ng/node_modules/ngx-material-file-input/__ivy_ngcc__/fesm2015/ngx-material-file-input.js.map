{"version":3,"file":"ngx-material-file-input.js","sources":["ng:/ngx-material-file-input/lib/model/file-input-config.model.ts","ng:/ngx-material-file-input/lib/model/file-input.model.ts","ng:/ngx-material-file-input/lib/file-input/file-input-mixin.ts","ng:/ngx-material-file-input/lib/file-input/file-input.component.ts","ng:/ngx-material-file-input/lib/pipe/byte-format.pipe.ts","ng:/ngx-material-file-input/lib/material-file-input.module.ts","ng:/ngx-material-file-input/lib/validator/file-validator.ts","ng:/ngx-material-file-input/ngx-material-file-input.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[] | null, private delimiter: string = ', ') {\n    this._fileNames = (this._files || []).map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\n\n// Boilerplate for applying mixins to FileInput\n/** @docs-private */\nexport class FileInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n      public _parentForm: NgForm,\n      public _parentFormGroup: FormGroupDirective,\n      public ngControl: NgControl) { }\n}\n\n/**\n * Allows to use a custom ErrorStateMatcher with the file-input component\n */\nexport const FileInputMixinBase:\n  CanUpdateErrorStateCtor &\n  typeof FileInputBase =\n  mixinErrorState(FileInputBase);\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self, DoCheck } from '@angular/core';\nimport { ControlValueAccessor, NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { FileInput } from '../model/file-input.model';\nimport { FileInputMixinBase } from './file-input-mixin';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent extends FileInputMixinBase implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy, DoCheck {\n  static nextId = 0;\n\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n  @Input() accept: string | null = null;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Whether the current input has files\n   */\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled(): boolean {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl)\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  writeValue(obj: FileInput | null): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Remove all files from the file input component\n   * @param [event] optional event that may have triggered the clear action\n   */\n  clear(event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.value = new FileInput([]);\n    this._elementRef.nativeElement.querySelector('input').value = null;\n    this._onChange(this.value);\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: Event) {\n    const fileList: FileList | null = (<HTMLInputElement>event.target).files;\n    const fileArray: File[] = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport { FileInputConfig, NGX_MAT_FILE_INPUT_CONFIG } from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n  /**\n   * Function to control content of files\n   *\n   * @param bytes max number of bytes allowed\n   *\n   * @returns\n   */\n  export function maxContentSize(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n      const condition = bytes >= size;\n      return condition\n        ? null\n        : {\n            maxContentSize: {\n              actualSize: size,\n              maxSize: bytes\n            }\n          };\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileInputBase as ɵa,FileInputMixinBase as ɵb} from './lib/file-input/file-input-mixin';"]}