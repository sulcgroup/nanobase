{"version":3,"file":"file-input.component.d.ts","sources":["file-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, ElementRef, OnDestroy, Renderer2, DoCheck } from '@angular/core';\nimport { ControlValueAccessor, NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInput } from '../model/file-input.model';\nimport { FileInputMixinBase } from './file-input-mixin';\nexport declare class FileInputComponent extends FileInputMixinBase implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy, DoCheck {\n    private fm;\n    private _elementRef;\n    private _renderer;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n    _parentForm: NgForm;\n    _parentFormGroup: FormGroupDirective;\n    static nextId: number;\n    focused: boolean;\n    controlType: string;\n    autofilled: boolean;\n    private _placeholder;\n    private _required;\n    valuePlaceholder: string;\n    multiple: boolean;\n    accept: string | null;\n    errorStateMatcher: ErrorStateMatcher;\n    id: string;\n    describedBy: string;\n    setDescribedByIds(ids: string[]): void;\n    get value(): FileInput | null;\n    set value(fileInput: FileInput | null);\n    get placeholder(): string;\n    set placeholder(plh: string);\n    /**\n     * Whether the current input has files\n     */\n    get empty(): boolean;\n    get shouldLabelFloat(): boolean;\n    get required(): boolean;\n    set required(req: boolean);\n    get isDisabled(): boolean;\n    get disabled(): boolean;\n    set disabled(dis: boolean);\n    onContainerClick(event: MouseEvent): void;\n    /**\n     * @see https://angular.io/api/forms/ControlValueAccessor\n     */\n    constructor(fm: FocusMonitor, _elementRef: ElementRef, _renderer: Renderer2, _defaultErrorStateMatcher: ErrorStateMatcher, ngControl: NgControl, _parentForm: NgForm, _parentFormGroup: FormGroupDirective);\n    private _onChange;\n    private _onTouched;\n    get fileNames(): string;\n    writeValue(obj: FileInput | null): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: any): void;\n    /**\n     * Remove all files from the file input component\n     * @param [event] optional event that may have triggered the clear action\n     */\n    clear(event?: Event): void;\n    change(event: Event): void;\n    blur(): void;\n    setDisabledState(isDisabled: boolean): void;\n    ngOnInit(): void;\n    open(): void;\n    ngOnDestroy(): void;\n    ngDoCheck(): void;\n}\n"]}