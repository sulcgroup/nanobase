import { Properties as CarouselProperties } from './interfaces';
export interface Properties {
    carouselProperties: CarouselProperties;
}
export declare class Slide {
    private carouselProperties;
    private utils;
    private cells;
    private container;
    slideLength: number;
    isSlideInProgress: boolean;
    direction: 'left' | 'right';
    counter: number;
    _counter: number;
    distance: any;
    distanceAbs: any;
    visibleWidth: number;
    isNotClickOnArrow: boolean;
    initialPositionX: number;
    currentPositionX: number;
    isSlideLengthLimited: boolean;
    get fullCellWidth(): number;
    get margin(): number;
    get minSwipeDistance(): number;
    get visibleCellsCount(): number;
    get visibleCellsOverflowContainer(): boolean;
    get fixedContainerPosition(): number;
    get overflowCellsLimit(): number;
    get images(): any;
    get cellLength(): any;
    get isLightDOM(): boolean;
    constructor(carouselProperties: CarouselProperties, utils: any, cells: any, container: any);
    init(): void;
    handleTouchstart(event: any): void;
    handleTouchend(event: any): void;
    handleTransitionend(): void;
    detectClickOnArrow(event: any): any;
    handleSlide(customSlideLength?: number): void;
    next(length?: number): void;
    prev(length?: number): void;
    select(index: number): void;
    getPreliminaryCounter(): number;
    limitSlideLength(slideLength: number): number;
    getPositionCorrection(counter: any): number;
    getSlideLength(distanceAbs: any): number;
    getDistanceAbs(): number;
    getDirection(): "left" | "right";
    isSlidesEnd(counter: number): boolean;
    isLastSlide(counter: number): boolean;
    setCounter(): void;
    getPositionByIndex(_counter: any): any;
    provideSafePosition(position: any): any;
    getPositionWithoutCorrection(value: any): any;
    isNextArrowDisabled(): boolean;
    isPrevArrowDisabled(): boolean;
    alignContainerFast(): void;
    isLightDOMMode(counter: any): any;
    ifLeftDOMModeAtEnd(counter: any): any;
    ifLeftDOMModeToBeginning(counter: any): any;
}
