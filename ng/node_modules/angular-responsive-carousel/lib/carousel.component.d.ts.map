{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { Images } from './interfaces';\r\nexport declare class CarouselComponent implements OnDestroy {\r\n    private elementRef;\r\n    private ref;\r\n    carousel: any;\r\n    container: any;\r\n    utils: any;\r\n    cells: any;\r\n    slide: any;\r\n    _id: string;\r\n    _images: Images;\r\n    touches: any;\r\n    landscapeMode: any;\r\n    minTimeout: number;\r\n    isVideoPlaying: boolean;\r\n    _isCounter: boolean;\r\n    _width: number;\r\n    _cellWidth: number | '100%';\r\n    _loop: boolean;\r\n    _lightDOM: boolean;\r\n    isMoving: boolean;\r\n    isNgContent: boolean;\r\n    cellLength: number;\r\n    dotsArr: any;\r\n    get isContainerLocked(): any;\r\n    get slideCounter(): any;\r\n    get lapCounter(): any;\r\n    get isLandscape(): boolean;\r\n    get isSafari(): any;\r\n    get counter(): string;\r\n    get cellsElement(): any;\r\n    get isArrows(): boolean;\r\n    get isCounter(): boolean;\r\n    get activeDotIndex(): number;\r\n    get cellLimit(): any;\r\n    events: EventEmitter<any>;\r\n    id: number;\r\n    height: number;\r\n    width: number;\r\n    autoplay: boolean;\r\n    autoplayInterval: number;\r\n    pauseOnHover: boolean;\r\n    dots: boolean;\r\n    borderRadius: number;\r\n    margin: number;\r\n    objectFit: 'contain' | 'cover' | 'none';\r\n    minSwipeDistance: number;\r\n    transitionDuration: number;\r\n    transitionTimingFunction: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear';\r\n    videoProperties: any;\r\n    counterSeparator: string;\r\n    overflowCellsLimit: number;\r\n    listeners: 'auto' | 'mouse and touch';\r\n    cellsToShow: number;\r\n    cellsToScroll: number;\r\n    freeScroll: boolean;\r\n    arrows: boolean;\r\n    arrowsOutside: boolean;\r\n    arrowsTheme: 'light' | 'dark';\r\n    set images(images: Images & any);\r\n    get images(): Images & any;\r\n    set cellWidth(value: number | '100%');\r\n    set isCounter(value: boolean);\r\n    set loop(value: boolean);\r\n    get loop(): boolean;\r\n    set lightDOM(value: boolean);\r\n    get lightDOM(): boolean;\r\n    hostClassCarousel: boolean;\r\n    hostStyleHeight: string;\r\n    hostStyleWidth: string;\r\n    onWindowResize(event: any): void;\r\n    onMousemove(event: MouseEvent): void;\r\n    onMouseleave(event: MouseEvent): void;\r\n    constructor(elementRef: ElementRef, ref: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    initCarousel(): void;\r\n    detectDomChanges(): void;\r\n    onDomChanges(): void;\r\n    setDimensions(): void;\r\n    getImage(index: any): any;\r\n    handleTouchstart: (event: any) => void;\r\n    handleHorizontalSwipe: (event: any) => void;\r\n    handleTouchend: (event: any) => void;\r\n    handleTap: (event: any) => void;\r\n    handleTransitionendCellContainer(event: any): void;\r\n    toggleVideo(video: any): void;\r\n    getCellWidth(): any;\r\n    next(): void;\r\n    prev(): void;\r\n    isNextArrowDisabled(): any;\r\n    isPrevArrowDisabled(): any;\r\n    getCellLength(): any;\r\n}\r\n"]}